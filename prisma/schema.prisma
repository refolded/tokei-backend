generator client {
  provider        = "prisma-client-js"

}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String             @id @default(uuid())
  email           String             @unique
  name            String
  password        String
  adminProjects   Project[]          @relation("AdminInProject")
  adminWorkspaces Workspace[]        @relation("AdminInWorkspace")
  projects        Project[]
  workspaces      Workspace[]
}

model Workspace {
  id             String             @id @default(uuid())
  type           String
  name           String
  administrators User[]             @relation("AdminInWorkspace")
  projects       Project[]
  users          User[]
}

model Project {
  id             String           @id @default(uuid())
  name           String
  description    String
  workspaceId    String
  workspace      Workspace        @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  administrators User[]           @relation("AdminInProject")
  items          Item[]
  users          User[]
}

model Item {
  id          String     @id @default(uuid())
  title       String?     @default("")
  description String?     @default("")
  itemId      String?     
  item        Item?      @relation("ItemToItem", fields: [itemId], references: [id], onDelete: Cascade)
  blocks      Block[]
  subItems    Item[]     @relation("ItemToItem")
  projects    Project[]
  properties  Property[]
}

model Block {
  id      String @id @default(uuid())
  content Json?
  itemId  String
  type    String
  Item    Item   @relation(fields: [itemId], references: [id])
}

model Property {
  id     String @id @default(uuid())
  value  Json?
  itemId String
  item   Item   @relation(fields: [itemId], references: [id])
}
